% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess_line_tweets.R
\name{extract_user_URL_dt}
\alias{extract_user_URL_dt}
\title{Extract User URLs from Entities Data}
\usage{
extract_user_URL_dt(entities, cutoff = 2, api_version = "v2")
}
\arguments{
\item{entities}{A data.table containing the entities data with URLs information.}

\item{cutoff}{An integer specifying the maximum number of URLs to keep per ID. Defaults to 2.}

\item{api_version}{A character string specifying the API version to use, either \code{"v1"} or \code{"v2"}. Defaults to \code{"v2"}.}
}
\value{
A data.table in wide format where each row represents a unique ID,
and columns represent URLs (\code{url_url}, \code{url_display_url}, \code{url_expanded_url}, \code{url_domain}, etc.)
up to the specified \code{cutoff} number.
\itemize{
\item In API v2, URLs are extracted from the \code{urls.} columns.
\item If \code{tweet_id} or \code{user_id} columns are found, they are standardized to \code{"id"},
then renamed back to their original name after processing.
}
}
\description{
This function extracts URL information from a given entities data.table.
It handles both API versions v1 and v2, standardizes the column names, and reshapes
the data into a wide format. Optionally, it limits the number of URLs per ID.
}
\details{
The function processes URLs by unnesting long-form data, standardizing column names,
limiting the number of URLs per ID based on the \code{cutoff}, extracting domain names, and pivoting
the data into a wide format. It handles empty observations, and if more than \code{cutoff} URLs are
found per ID, they are dropped.
}
